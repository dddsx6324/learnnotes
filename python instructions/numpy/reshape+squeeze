1 reshape: 改变数组的维数
  X.reshape(X.shape[0], -1)可以将一个维度为(a,b,c,d)的矩阵转换为一个维度为(a,b∗c∗d)的矩阵
  例子1：
  >>> X.shape
      (209, 64, 64, 3)
  我们假设x的shape是(209, 64, 64, 3)的。
  >>> X.shape[0]
      209
  然后，我们说shape[0]就是第一个列的行数，也就是209。
  >>> X.reshape(X.shape[0], -1)
      (209, 64*64*3)
  通过reshape重新建立维度，
  第一个维度就是X.shape[0]，第二个维度是-1，我们知道X的shape属性是多少，是(209, 64, 64, 3)，但是想让X变成209行，
  列数不知道是多少，所以也就是209 * 64 * 64 * 3 / 209，也就是64 * 64 * 3。参数-1就是不知道行数或者列数多少的情况下使用的参数，
  所以先确定除了参数-1之外的其他参数，然后通过(总参数的计算) / (确定除了参数-1之外的其他参数) = 该位置应该是多少的参数
  
2 squeeze：从数组的形状中删除单维度条目，即把shape中为1的维度去掉
  用法：numpy.squeeze(a,axis = None)
       1）a表示输入的数组；
       2）axis用于指定需要删除的维度，但是指定的维度必须为单维度，否则将会报错；
       3）axis的取值可为None 或 int 或 tuple of ints, 可选。若axis为空，则删除所有单维度的条目；
       4）返回值：数组
   例：    
      >>> a = e.reshape(1,1,10)
      >>> a
      array([[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]])
      >>> np.squeeze(a)
      array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
